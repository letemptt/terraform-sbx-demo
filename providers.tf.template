terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "~>3.0"
    }
    random = {
      source  = "hashicorp/random"
      version = "~>3.0"
    }
  }

  # Azure backend
  # See https://developer.hashicorp.com/terraform/language/settings/backends/azurerm
  backend "azurerm" {

    # The backend stanza cannot use variables, so we hardcode the values here,
    # and put the secrets in env.sh.

    tenant_id            = var.tenant_id
    subscription_id      = var.subscription_id
    resource_group_name  = var.resource_group_name
    storage_account_name = var.storage_account_name
    container_name       = var.container_name
    # The key is the name of the file in the container
    key                  = var.key

    # Managed Identity Authentication
    # TODO: Use managed identity
    # use_msi            = false

    # Service Principal. The mandatory secrets can't be provided
    # in variables, so we provide them in env.sh. 
    # deploy service principal / secret
    client_id     = CLIENT_ID
    client_secret = CLIENT_KEY
  }

}

provider "azurerm" {

  tenant_id       = var.tenant_id
  subscription_id = var.subscription_id

  # Manual service principal authentication
  # TODO: Use managed identity
  client_id     = var.client_id
  client_secret = var.client_secret

  features {
    key_vault {
      recover_soft_deleted_key_vaults    = false
      purge_soft_delete_on_destroy       = true
      purge_soft_deleted_keys_on_destroy = true
    }
    resource_group {
      prevent_deletion_if_contains_resources = false
    }
  }
}

data "azurerm_client_config" "current" {}
